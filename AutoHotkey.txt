#SingleInstance force

DetectHiddenWindows, On
Script_Hwnd := WinExist("ahk_class AutoHotkey ahk_pid " DllCall("GetCurrentProcessId"))
DetectHiddenWindows, Off

; Register shell hook to detect flashing windows.
DllCall("RegisterShellHookWindow", "uint", Script_Hwnd)
OnMessage(DllCall("RegisterWindowMessage", "str", "SHELLHOOK"), "ShellEvent")

; Settings
IniRead, server, setting.ini, Default, Server, ""
IniRead, port, setting.ini, Default, Port, 45678
IniRead, enable_winkey_hack, setting.ini, Default, EnableWinkeyHack, "false"
IniRead, popo_enable_team_white_list, setting.ini, POPO, EnableTeamWhiteList, "false"
IniRead, popo_team_white_list, setting.ini, POPO, TeamWhiteList, ""
IniRead, popo_team_separator, setting.ini, POPO, TeamSeparator, "|"
popo_team_white_list := StrSplit(popo_team_white_list, popo_team_separator)

if (server = "") {
    MsgBox 请修改setting.ini，Default->Server为服务端IP
    ExitApp
}

URL := "http://" . server . ":" . port . "/?"

last_blink := A_TickCount

Notify(message) {
    global last_blink
    now := A_TickCount
    if ( ( now - last_blink ) > 3500 )
    {
        last_blink := now
        global URL
        request := ComObjCreate("WinHttp.WinHttpRequest.5.1")
        request.Open("GET", URL . message)
        request.Send()
     }
}

ShellEvent(wParam, lParam) {
    global popo_enable_team_white_list
    global popo_team_white_list

    if (wParam = 0x8006) ; HSHELL_FLASH
    {   ; lParam contains the ID of the window which flashed:

        WinGetTitle, win_title, ahk_id %lParam%
        WinGetClass, win_class, ahk_id %lParam%

        ; POPO个人消息
        if (win_class = "SessionForm")
        {
            ; 截取消息发送者名称
            win_title_array := StrSplit(win_title, " - ")
            win_title := win_title_array[1]
            if (win_title = "多人会话")
            {
                RegExMatch(win_title_array[2], ".*\((.*)\)", win_title)
            }

            ; MsgBox, %win_title%, %win_class%
            Notify("POPO：" . win_title)
            return
        }

        ; POPO兴趣组消息
        if (win_class = "TeamForm")
        {
            ; 截取兴趣组名称
            win_title := StrSplit(win_title, " - ")[1]

            if (popo_enable_team_white_list = "true")
            {
                ; 仅通知team_white_list白名单里的兴趣组
                for i, element in popo_team_white_list
                {
                    ; MsgBox, %win_title%, %win_class%, %element%
                    if (element = win_title)
                    {
                        Notify("POPO群：" . win_title)
                        return
                    }
                }
            } else {
                Notify("POPO群：" . win_title)
                return
            }
            return
        }

        ; 其他消息
        Notify(win_title)
    }
}

; 按下 win 键聚焦到任务栏，松开聚焦回原来的窗口，配合 Linux 一些窗口管理器使用。
; 在 Linux 上使用远程登录软件登录 Windows，并且用 win+? 组合键切换聚焦，聚焦离开
; 登录软件时，Windows 只会收到 win 键按下的事件，而聚焦回到远程登录软件时，
; Windows 只会收到 win 键松开的事件。
#If enable_winkey_hack = "true"
Lwin::
WinActivate, ahk_class Shell_TrayWnd
KeyWait, Lwin
SendInput !{Esc}
return
#If
